<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>6.0</version>
    <date>2022-11-06T14:38:40Z</date>
    <groups>
        <group>
            <uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid>
            <name>Templates/Applications</name>
        </group>
    </groups>
    <templates>
        <template>
            <uuid>d97bc4badf3a402492d5ecbbe622e712</uuid>
            <template>Template Asterisk AMI</template>
            <name>Template Asterisk AMI</name>
            <description>Template install
1) Create two macros by host:
{$HOST_ID} - Set ID host
{$ASTERISK_AMI_COOKIE} - empty
2) Make sure you have both "enabled = yes" and "webenabled = yes" setup in /etc/asterisk/manager.conf, You may also use "httptimeout" to set a default timeout for HTTP connections.
3) Make sure you have a manager username/secret
4) Set username/secret, AMI WEB port, protocol in macro template

Author: Stanislav Yaroshevskiy 1@3sla.ru
</description>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>f5413355f62b431389bff95ffaf3ed6b</uuid>
                    <name>Asterisk - AMI SIPpeers</name>
                    <type>HTTP_AGENT</type>
                    <key>AsteriskAMISIPpeers</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <url>{$ASTERISK_AMI_PROTOCOL}://{HOST.IP}:{$ASTERISK_AMI_PORT}/mxml</url>
                    <query_fields>
                        <query_field>
                            <name>action</name>
                            <value>SIPpeers</value>
                        </query_field>
                    </query_fields>
                    <follow_redirects>NO</follow_redirects>
                    <headers>
                        <header>
                            <name>Cookie</name>
                            <value>mansession_id="{$ASTERISK_AMI_COOKIE}";</value>
                        </header>
                    </headers>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>AMI</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>9b00ddd1513647798986a71891f3bb73</uuid>
                    <name>Asterisk - AMI SIPshowregistry</name>
                    <type>HTTP_AGENT</type>
                    <key>AsteriskAMISIPshowregistry</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <url>{$ASTERISK_AMI_PROTOCOL}://{HOST.IP}:{$ASTERISK_AMI_PORT}/mxml</url>
                    <query_fields>
                        <query_field>
                            <name>action</name>
                            <value>SIPshowregistry</value>
                        </query_field>
                    </query_fields>
                    <follow_redirects>NO</follow_redirects>
                    <headers>
                        <header>
                            <name>Cookie</name>
                            <value>mansession_id="{$ASTERISK_AMI_COOKIE}";</value>
                        </header>
                    </headers>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>AMI</value>
                        </tag>
                    </tags>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>0556bf5e68dd46f2a7aea18ec9071d17</uuid>
                    <name>Asterisk - AMI SIPpeers LLD</name>
                    <type>HTTP_AGENT</type>
                    <key>AsteriskAMISIPpeersLLD</key>
                    <delay>1h</delay>
                    <status>DISABLED</status>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>9c62e8a3053d4eaab681093ea454bdde</uuid>
                            <name>{#SIP_PEER_CHANNELTYPE}/{#SIP_PEER_OBEJECTNAME} - Status</name>
                            <type>DEPENDENT</type>
                            <key>sippeerstatus[{#SIP_PEER_CHANNELTYPE}/{#SIP_PEER_OBEJECTNAME}]</key>
                            <delay>0</delay>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <preprocessing>
                                <step>
                                    <type>XMLPATH</type>
                                    <parameters>
                                        <parameter>string(//response/generic[@objectname="{#SIP_PEER_OBEJECTNAME}"]/@status)</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>REGEX</type>
                                    <parameters>
                                        <parameter>^([\w]+)</parameter>
                                        <parameter>\1</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>AsteriskAMISIPpeers</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>Application</tag>
                                    <value>AMI</value>
                                </tag>
                                <tag>
                                    <tag>Application</tag>
                                    <value>SipPeer</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>d7245db873e9448baa3f94a2087c2ad8</uuid>
                            <name>{#SIP_PEER_CHANNELTYPE}/{#SIP_PEER_OBEJECTNAME} - Response Time</name>
                            <type>DEPENDENT</type>
                            <key>sippeer[{#SIP_PEER_CHANNELTYPE}/{#SIP_PEER_OBEJECTNAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>ms</units>
                            <preprocessing>
                                <step>
                                    <type>XMLPATH</type>
                                    <parameters>
                                        <parameter>string(//response/generic[@objectname="{#SIP_PEER_OBEJECTNAME}"]/@status)</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>if(value.substring(0,2) == 'OK'){
	return value.match(/(\d+)/gm);
}
else {
	return -1;
}</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>AsteriskAMISIPpeers</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>Application</tag>
                                    <value>AMI</value>
                                </tag>
                                <tag>
                                    <tag>Application</tag>
                                    <value>SipPeer</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>c94b7ed23e444bf99005669882442a2d</uuid>
                                    <expression>last(/Template Asterisk AMI/sippeer[{#SIP_PEER_CHANNELTYPE}/{#SIP_PEER_OBEJECTNAME}])&gt;150</expression>
                                    <name>SIP Peer - {#SIP_PEER_CHANNELTYPE}/{#SIP_PEER_OBEJECTNAME} - Critical response time</name>
                                    <status>DISABLED</status>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>caaed3753c984adc8303c97525e50b67</uuid>
                                    <expression>last(/Template Asterisk AMI/sippeer[{#SIP_PEER_CHANNELTYPE}/{#SIP_PEER_OBEJECTNAME}])&gt;75</expression>
                                    <name>SIP Peer - {#SIP_PEER_CHANNELTYPE}/{#SIP_PEER_OBEJECTNAME} - High response time</name>
                                    <status>DISABLED</status>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <url>{$ASTERISK_AMI_PROTOCOL}://{HOST.IP}:{$ASTERISK_AMI_PORT}/mxml</url>
                    <query_fields>
                        <query_field>
                            <name>action</name>
                            <value>SIPpeers</value>
                        </query_field>
                    </query_fields>
                    <follow_redirects>NO</follow_redirects>
                    <headers>
                        <header>
                            <name>Cookie</name>
                            <value>mansession_id="{$ASTERISK_AMI_COOKIE}";</value>
                        </header>
                    </headers>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#SIP_PEER_CHANNELTYPE}</lld_macro>
                            <path>$.['channeltype']</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SIP_PEER_OBEJECTNAME}</lld_macro>
                            <path>$.['objectname']</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>XMLPATH</type>
                            <parameters>
                                <parameter>//response/generic[@channeltype]</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>function xmlToJson(xml){
	xml = xml.replace(/=/gi,  '":'	);
	xml = xml.replace(/" /gi, '", "');
	xml = xml.replace(/\/&gt;/gi, '},' );
	xml = xml.replace(/&lt;generic /gi,'{"' );
        xml = '[' + xml.substring(0,xml.length-1) + ']';
	return xml;
}
return xmlToJson(value);</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <uuid>e33a562fff7642e98bb78fe2b0bbef71</uuid>
                    <name>Asterisk - AMI SIPshowregistry LLD</name>
                    <type>HTTP_AGENT</type>
                    <key>AsteriskAMISIPshowregistryLLD</key>
                    <delay>1h</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>7c53d23cf53046d5b51ab04492970e5e</uuid>
                            <name>SIP Registry Status - {#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}</name>
                            <type>DEPENDENT</type>
                            <key>sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}]</key>
                            <delay>0</delay>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <preprocessing>
                                <step>
                                    <type>XMLPATH</type>
                                    <parameters>
                                        <parameter>string(//response/generic[@event="RegistryEntry"][@username="{#SIP_REGISTRY_USERNAME}"][@host="{#SIP_REGISTRY_HOST}"][@port="{#SIP_REGISTRY_PORT}"]/@state)</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>AsteriskAMISIPshowregistry</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>Application</tag>
                                    <value>AMI</value>
                                </tag>
                                <tag>
                                    <tag>Application</tag>
                                    <value>SipRegistry</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>7c4174b0e1204a6a92b625fd59b50131</uuid>
                                    <expression>last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#1)="No Authentication" and
last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#2)="No Authentication" and
last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#3)="No Authentication" and
last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#4)="No Authentication"</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}])="Registered"</recovery_expression>
                                    <name>SIP Registry not auth- {#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}</name>
                                    <status>DISABLED</status>
                                    <priority>HIGH</priority>
                                    <manual_close>YES</manual_close>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>13c85a980f724dd1a50b9997cd259c21</uuid>
                                    <expression>last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#1)&lt;&gt;"Registered" and
last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#2)&lt;&gt;"Registered" and
last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#3)&lt;&gt;"Registered" and
last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#4)&lt;&gt;"Registered"</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}])="Registered"</recovery_expression>
                                    <name>SIP Registry Status - {#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}</name>
                                    <status>DISABLED</status>
                                    <priority>AVERAGE</priority>
                                    <manual_close>YES</manual_close>
                                    <dependencies>
                                        <dependency>
                                            <name>SIP Registry not auth- {#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}</name>
                                            <expression>last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#1)="No Authentication" and
last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#2)="No Authentication" and
last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#3)="No Authentication" and
last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}],#4)="No Authentication"</expression>
                                            <recovery_expression>last(/Template Asterisk AMI/sipregistry[{#SIP_REGISTRY_USERNAME}@{#SIP_REGISTRY_HOST}:{#SIP_REGISTRY_PORT}])="Registered"</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <url>{$ASTERISK_AMI_PROTOCOL}://{HOST.IP}:{$ASTERISK_AMI_PORT}/mxml</url>
                    <query_fields>
                        <query_field>
                            <name>action</name>
                            <value>SIPshowregistry</value>
                        </query_field>
                    </query_fields>
                    <follow_redirects>NO</follow_redirects>
                    <headers>
                        <header>
                            <name>Cookie</name>
                            <value>mansession_id="{$ASTERISK_AMI_COOKIE}";</value>
                        </header>
                    </headers>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#SIP_REGISTRY_HOST}</lld_macro>
                            <path>$.['host']</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SIP_REGISTRY_PORT}</lld_macro>
                            <path>$.['port']</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SIP_REGISTRY_REGISTRATIONTIME}</lld_macro>
                            <path>$.['registrationtime']</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SIP_REGISTRY_STATE}</lld_macro>
                            <path>$.['state']</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SIP_REGISTRY_USERNAME}</lld_macro>
                            <path>$.['username']</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>XMLPATH</type>
                            <parameters>
                                <parameter>//response/generic[@host]</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>function xmlToJson(xml){
	xml = xml.replace(/=/gi,  '":'	);
	xml = xml.replace(/" /gi, '", "');
	xml = xml.replace(/\/&gt;/gi, '},' );
	xml = xml.replace(/&lt;generic /gi,'{"' );
	//xml = '{ "element": [' + xml.substring(0,xml.length-1) + ']}';
        xml = '[' + xml.substring(0,xml.length-1) + ']';
	return xml;
}
return xmlToJson(value);</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <httptests>
                <httptest>
                    <uuid>97a9e43460334e548a62ebb8ca64fe08</uuid>
                    <name>Asterisk - Get and Set AMI Cookie</name>
                    <delay>30s</delay>
                    <steps>
                        <step>
                            <name>Asterisk Web AMI - Getting cookie ID</name>
                            <url>{$ASTERISK_AMI_PROTOCOL}://{HOST.IP}:{$ASTERISK_AMI_PORT}/mxml</url>
                            <query_fields>
                                <query_field>
                                    <name>action</name>
                                    <value>login</value>
                                </query_field>
                                <query_field>
                                    <name>username</name>
                                    <value>{$ASTERISK_AMI_USERNAME}</value>
                                </query_field>
                                <query_field>
                                    <name>secret</name>
                                    <value>{$ASTERISK_AMI_SECRET}</value>
                                </query_field>
                            </query_fields>
                            <variables>
                                <variable>
                                    <name>{mansession_id}</name>
                                    <value>regex:mansession_id="([0-9A-z]+)"</value>
                                </variable>
                            </variables>
                            <follow_redirects>NO</follow_redirects>
                            <retrieve_mode>BOTH</retrieve_mode>
                            <timeout>3s</timeout>
                            <required>Success</required>
                        </step>
                        <step>
                            <name>Zabbix API - Getting Session ID</name>
                            <url>{$ZABBIX_API_URL}</url>
                            <posts>{&#13;
    "jsonrpc": "2.0",&#13;
    "method": "user.login",&#13;
    "params": {&#13;
        "user": "{$ZABBIX_API_LOGIN}",&#13;
        "password": "{$ZABBIX_API_PASSWORD}"&#13;
    },&#13;
    "id": 1,&#13;
    "auth": null&#13;
}</posts>
                            <variables>
                                <variable>
                                    <name>{sid}</name>
                                    <value>regex:([0-9A-z]{32})</value>
                                </variable>
                            </variables>
                            <headers>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json-rpc</value>
                                </header>
                            </headers>
                            <follow_redirects>NO</follow_redirects>
                            <timeout>3s</timeout>
                            <required>result</required>
                        </step>
                        <step>
                            <name>Zabbix API - Macro ID search</name>
                            <url>{$ZABBIX_API_URL}</url>
                            <posts>{&#13;
    "jsonrpc":"2.0",&#13;
    "method":"usermacro.get",&#13;
    "params":{&#13;
        "output":"extend",&#13;
        "hostids":"{$HOST_ID}"&#13;
    },&#13;
    "auth":"{sid}",&#13;
    "id":1&#13;
}</posts>
                            <variables>
                                <variable>
                                    <name>{hostmacroid}</name>
                                    <value>regex:{"hostmacroid":"([0-9]+)"[A-z0-9,":]+"{\$ASTERISK_AMI_COOKIE}"</value>
                                </variable>
                            </variables>
                            <headers>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json-rpc</value>
                                </header>
                            </headers>
                            <follow_redirects>NO</follow_redirects>
                            <timeout>5s</timeout>
                            <required>result</required>
                        </step>
                        <step>
                            <name>Zabbix API - macros update</name>
                            <url>{$ZABBIX_API_URL}</url>
                            <posts>{&#13;
    "jsonrpc":"2.0",&#13;
    "method":"usermacro.update",&#13;
    "params":{&#13;
        "hostmacroid":"{hostmacroid}",&#13;
        "value":"{mansession_id}"&#13;
    },&#13;
    "auth":"{sid}",&#13;
    "id":1&#13;
}</posts>
                            <headers>
                                <header>
                                    <name>Content-type</name>
                                    <value>application/json-rpc</value>
                                </header>
                            </headers>
                            <follow_redirects>NO</follow_redirects>
                            <timeout>5s</timeout>
                            <required>result</required>
                        </step>
                    </steps>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>AMI</value>
                        </tag>
                    </tags>
                </httptest>
            </httptests>
            <macros>
                <macro>
                    <macro>{$ASTERISK_AMI_PORT}</macro>
                    <value>8088</value>
                    <description>Default 8088(HTTP) or 8089(HTTPS)</description>
                </macro>
                <macro>
                    <macro>{$ASTERISK_AMI_PROTOCOL}</macro>
                    <value>http</value>
                    <description>HTTP or HTTPS</description>
                </macro>
                <macro>
                    <macro>{$ASTERISK_AMI_SECRET}</macro>
                    <value>zabbix</value>
                    <description>AMI password</description>
                </macro>
                <macro>
                    <macro>{$ASTERISK_AMI_USERNAME}</macro>
                    <value>zabbix</value>
                    <description>AMI login</description>
                </macro>
                <macro>
                    <macro>{$HOST_ID}</macro>
                    <value>id</value>
                </macro>
                <macro>
                    <macro>{$ZABBIX_API_LOGIN}</macro>
                    <value>ZabbixAMIAuthUpdater</value>
                    <description>Zabbix API login</description>
                </macro>
                <macro>
                    <macro>{$ZABBIX_API_PASSWORD}</macro>
                    <value>ZabbixAMIAuthUpdater</value>
                    <description>Zabbix API password</description>
                </macro>
                <macro>
                    <macro>{$ZABBIX_API_URL}</macro>
                    <value>http://192.168.29.77/zabbix/api_jsonrpc.php</value>
                    <description>Zabbix API URL</description>
                </macro>
            </macros>
        </template>
    </templates>
    <triggers>
        <trigger>
            <uuid>565dfbbc1192447ab467238e4bd48057</uuid>
            <expression>last(/Template Asterisk AMI/web.test.fail[Asterisk - Get and Set AMI Cookie])=1</expression>
            <name>Asterisk WEB AMI - authentication error</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <uuid>5be11c1b94f2455a93261649420279dc</uuid>
            <expression>last(/Template Asterisk AMI/web.test.fail[Asterisk - Get and Set AMI Cookie])=2</expression>
            <name>Zabbix API - authorization error</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <uuid>7a896336bd7e48e3a1e4a221317d508e</uuid>
            <expression>last(/Template Asterisk AMI/web.test.fail[Asterisk - Get and Set AMI Cookie])=3</expression>
            <name>Zabbix API - macro search error</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <uuid>bcaf1862751c457fbeab2186498f9d83</uuid>
            <expression>last(/Template Asterisk AMI/web.test.fail[Asterisk - Get and Set AMI Cookie])=4</expression>
            <name>Zabbix API - macro update error</name>
            <priority>WARNING</priority>
        </trigger>
    </triggers>
</zabbix_export>
